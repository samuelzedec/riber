name: riber

services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: riber-pgsql-dev
    environment:
      POSTGRES_DB: riber_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - data-dev:/var/lib/postgresql/data
      - ./init-sonar-db.sql:/docker-entrypoint-initdb.d/init-sonar-db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: runtime
    container_name: riber-api-dev
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Database=riber_db;Username=postgres;Password=root
      OTEL_EXPORTER_OTLP_ENDPOINT: http://dashboard:18889

  sonarqube:
    profiles: [ "analysis" ]
    image: sonarqube:community
    container_name: riber-sonarqube-dev
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
      SONAR_JDBC_URL=jdbc: postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
  
  dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    container_name: riber-aspire-dashboard
    ports:
      - "18888:18888"
      - "4317:4317"
    environment:
      DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS: true
    restart: unless-stopped

volumes:
  data-dev:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  default:
    name: network-dev
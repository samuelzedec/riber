name: CD Pipeline
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: image
        run: |
          VERSION=$(grep '<Version>' Directory.Build.props | sed 's/.*<Version>\(.*\)<\/Version>.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR }}

      - name: Build and push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/riber:latest
            ghcr.io/${{ github.repository_owner }}/riber:${{ steps.image.outputs.version }}
    
#      - name: Deploy to AWS EC2
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_KEY }}
#          script: |
#            echo "${{ secrets.GHCR }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
#            docker pull ghcr.io/${{ github.repository_owner }}/riber:${{ steps.image.outputs.version }}
#            
#            docker stop riber-api || true
#            docker rm riber-api || true
#            
#            docker run -d --name riber-api -p 80:8080 --restart unless-stopped \
#              -e ConnectionStrings__DefaultConnection="${{ secrets.CONNECTION_STRING }}" \
#              -e AccessTokenSettings__SecretKey="${{ secrets.ACCESS_TOKEN_SECRET_KEY }}" \
#              -e RefreshTokenSettings__SecretKey="${{ secrets.REFRESH_TOKEN_SECRET_KEY }}" \
#              -e AWS__S3__BucketImagesName="${{ secrets.S3_BUCKET_IMAGES_NAME }}" \
#              ghcr.io/${{ github.repository_owner }}/riber:${{ steps.image.outputs.version }}
#            
#            docker images | grep riber | tail -n +4 | awk '{print $3}' | xargs -r docker rmi || true